openapi: 3.0.0
info:
  description: Project with express, sequelize and epilog
  version: 1.0.0
  title: Project with Express, Sequelize and epilog
tags:
  - name: Users
    description: Users API
paths:
  /users:
    get:
      tags:
        - Users
      summary: Show list of users API
      description: Show list of users API
      responses:
        '200':
          description: Successfully show list of users
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Users
      summary: Create user
      description: Create User
      responses:
        '200':
          description: Successful create user
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: prashant
                lastName: sharma
                email: "prashant.sharma.cse172gmail.com"
              required:
                - firstName
                - lastName
                - email
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
        description: User's details
        required: true
  /users/{id}:
    get:
      tags:
        - Users
      summary: Read user API
      description: Read user API
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: User id
      responses:
        '200':
          description: Successfully show user details
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    put:
      tags:
        - Users
      summary: 
      description: Update user details
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: User id
      responses:
        '200':
          description: Successfuly update user details
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: prashant
                lastName: sharma
                email: "prashant.sharma.cse172gmail.com"
              required:
                - firstName
                - lastName
                - email
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
        description: User's details
        required: true
    delete:
      tags:
        - Users
      summary: Delete user API
      description: Delete user API
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: User id
      responses:
        '200':
          description: Successfully delete user
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
servers:
  - url: 'http://localhost:5000'
components:
  securitySchemes:
  schemas:
    User:
      type: object
      required:
        - firstName
        - lastName
        - email
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
